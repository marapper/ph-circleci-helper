version: 2.1

orbs:
  ph: pricehubble/ph-circleci-helper@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@10.1.0

parameters:
  run-integration-tests:
    description: An internal flag to prevent integration test from running before a development version has been created.
    type: boolean
    default: false
  dev-orb-version:
    description: >
      The development version of the orb to test.
      This value is automatically adjusted by the "trigger-integration-tests-workflow" job to correspond with the specific version created by the commit and should not be edited.
      A "dev:alpha" version must exist for the initial pipeline run.
    type: string
    default: "dev:alpha"

  releaser-branch:
    description: releaser repo branch to be used for integration tests.
    type: string
    default: circleci/integration-tests 
  releaser-repo:
    description: releaser repo to be used for integration tests.
    type: string
    default: ph-releaser

jobs:
  helm:
    executor: ph/cloud-sdk
    steps:
    - checkout
    - ph/install-helm
    - ph/install-yq
    - ph/auth-helm
    - ph/push-helm:
        path: .circleci/tests/helm
    - run:
        name: Check if the tag is present in the registry
        command: |
          CHART_VERSION=$(yq e '.version' .circleci/tests/helm/Chart.yaml)
          CHART_NAME=$(yq e '.name' .circleci/tests/helm/Chart.yaml)
          
          gcloud artifacts docker tags list \
            --filter="tag:$CHART_VERSION" \
            europe-west1-docker.pkg.dev/prj-ops-artifact-registry-707c/helm/$CHART_NAME | grep $CHART_VERSION
  
  docker:
    executor: ph/cloud-sdk
    parameters:
      app:
        type: string
        default: circleci-orb-integration-test
      team:
        type: string
        default: sre 
    steps:
      - checkout
      - ph/auth-docker
      - ph/install-docker-compose
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Build image
          command: |
            docker build -t <<parameters.app>>:latest .circleci/tests/docker
      - ph/push-docker:
          team: <<parameters.team>>
          app: <<parameters.app>>
          source-tag: <<parameters.app>>:latest
      - run:
          name: Check if the tag is present in the registry
          command: |
            TAG="${CIRCLE_WORKFLOW_ID}.${CIRCLE_SHA1}"
            gcloud artifacts docker tags list \
              --filter="tag:$TAG" \
              europe-west1-docker.pkg.dev/prj-ops-artifact-registry-707c/container/<<parameters.team>>/<<parameters.app>> | grep $TAG
  bump:
    executor: ph/cloud-sdk
    parameters:
      app:
        type: string
        default: circleci-orb-integration-test
      team:
        type: string
        default: sre 
    steps:
      - ph/auth-gcp
      - ph/install-yq
      - ph/bump:
          team: <<parameters.team>>
          app: <<parameters.app>>
          env: predev
          releaser-repo: <<pipeline.parameters.releaser-repo>>
          releaser-branch: <<pipeline.parameters.releaser-branch>>
          push: false

      - ph/bump:
          team: <<parameters.team>>
          app: <<parameters.app>>
          env: dev
          releaser-repo: <<pipeline.parameters.releaser-repo>>
          releaser-branch: <<pipeline.parameters.releaser-branch>>
          push: true

      - run:
          name: Pull the releaser repo and check if the changes are present
          command: |
            rm -rf <<pipeline.parameters.releaser-repo>>
            git clone git@bitbucket.org:pricehubble/<<pipeline.parameters.releaser-repo>>.git \
              --depth 1 \
              --branch <<pipeline.parameters.releaser-branch>>
            
            cd <<pipeline.parameters.releaser-repo>>

            EXPECTED_TAG="${CIRCLE_WORKFLOW_ID}.${CIRCLE_SHA1}"
            FOUND_TAG=$(yq '.image.tag' apps/<<parameters.app>>/dev/values.yaml)
            if [[ "$FOUND_TAG" == "$EXPECTED_TAG" ]]; then
              echo "bump step updated the correct tag"
            else
              echo "bump step failed, expected tag: $EXPECTED_TAG, instead got on HEAD: $FOUND_TAG"
              exit 1
            fi

  sync:
    machine: true
    resource_class: pricehubble/incluster
    parameters:
      app:
        type: string
        default: circleci-orb-integration-test
      team:
        type: string
        default: sre 
    steps:
    - ph/sync-argocd:
        app: <<parameters.app>>
        team: <<parameters.team>>
        env: predev
    - ph/sync-argocd:
        app: <<parameters.app>>
        team: <<parameters.team>>
        env: dev

workflows:
  test-pack:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/pack
      - orb-tools/publish-dev:
          orb-name: pricehubble/ph-circleci-helper
          context: orb-publishing
          requires:
            - orb-tools/pack

      # Trigger an integration workflow to test the
      # dev:${CIRCLE_SHA1:0:7} version of your orb
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          context: orb-publishing
          requires:
            - orb-tools/publish-dev

  # This `integration-test_deploy` workflow will only run
  # when the run-integration-tests pipeline parameter is set to true.
  # It is meant to be triggered by the "trigger-integration-tests-workflow"
  # job, and run tests on <your orb>@dev:${CIRCLE_SHA1:0:7}.
  integration-test_deploy:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      - helm:
          context: landing-zone-root
      - docker:
          context: landing-zone-root
      - bump:
          context: landing-zone-root
          requires:
          - docker
      - sync:
          context: landing-zone-root
          requires:
            - bump
      # Publish a semver version of the orb. relies on
      # the commit subject containing the text "[semver:patch|minor|major|skip]"
      # as that will determine whether a patch, minor or major
      # version will be published or if publishing should
      # be skipped.
      # e.g. [semver:patch] will cause a patch version to be published.
      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: pricehubble/ph-circleci-helper
          context: orb-publishing
          add-pr-comment: false
          fail-if-semver-not-indicated: true
          publish-version-tag: false
          requires:
            - bump
            - helm
          filters:
            branches:
              only:
                - main
